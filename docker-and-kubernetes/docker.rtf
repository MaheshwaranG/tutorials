{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil Calibri;}{\f2\fnil\fcharset2 Symbol;}}
{\*\generator Riched20 10.0.17134}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs22\lang9 Before Get into the Topic Container, We need to know why container came to world, to compete with resource sharing in VM technology.\par
First to Know that clearly that, Computer has been divided by two things,\par
\tab\b 1. Hardware \par
\b0\tab\tab Hardware is a physical devices, like CPU, RAM, ROM, which all are called as \tab\tab\tab underlying technology of an computer.\par
\tab\b 2. Software\b0\par
\tab\tab Software is a program or application to perform particular task by controlling \tab\tab\tab Hardwares. \par
\tab\tab Ex : Chrome.\par
Above both are the essential part of computer system.  As we already specified that, each software (program) used to perform aspecific task. As of that, can you think that, can you run chrome application directly to an hardware. Not it is not possible. Because Chrome only able to process hypertext information it does not know how to communicate with system resource like CPU, RAM and ROM. Here it will depends on other programs that has the huge knowledge how to deal with system resources, that program call as Operating system.\par
\b Operating Systems : \par
\b0 Operating system is system software that manages computer hardware and software resources and provides common services for computer programs.\par
Simply, low-level software that supports a computer's basic functions, such as scheduling tasks and controlling peripherals. \par
\par
if you are came from computer science person, then you will have a question at this point, then where kernel.\par
\b Kernel :\b0\par
The kernel is the central module of an operating system (OS). It is the part of the operating system that loads first.\par
In operating system, the kernel is a computer program that manages input/output requests from software, and translates them into data processing instructions for the central processing unit and other electronic components of a computer\par
Simply,  the kernel is responsible for memory management, process and task management, and disk management. The kernel connects the system hardware to the application software. Every operating system has a \b kernel\b0 . For example the Linux kernel(NOT OS) is used numerous operating systems including Linux, FreeBSD, Android and others.\par
\b Kernel is a part of an operating system - \f1 the most crucial part. However, kernel alone will not make any OS work; there must be some softwares and other related things working together with kernel\f0\lang1033 , that is called OS.\par
\par
So we know all the basic can we talk about container. No, Container is new born child of 21th century. So we have to first know about his father Hypervisor. \par
\par
Hypervisor :\par
\b0 What is a Hypervisor? \par
A hypervisor (virtual machine monitor), is a process that creates and runs virtual machines (VMs). A hypervisor allows one host computer to support multiple guest VMs by virtually sharing its resources, like memory and processing. Generally, there are two types of hypervisors. \par
Type 1 : Bare metal -  run directly on the host\rquote s hardware. \par
Virtualization software that has been installed directly onto the computing hardware.This type of hypervisor controls not only the hardware, but one or more guest operating systems (OSes)\par
Type 2 :  hosted - run as a software layer on an operating system, like other computer programs. \par
\par
Why use a Hypervisor?\par
Hypervisors make it possible to use more of a system\rquote s available resources and provide greater IT mobility since the guest VMs are independent of the host hardware.\par
\par
\b Host and Guest Machine ?\par
\b0 A computer on which a hypervisor runs one or more virtual machines is called a host machine, and each virtual machine is called a guest machine. \par
\par
What are VMs?\par
     A virtual machine (VM) is an emulation of a computer system on an one computer.\par
However VM, can take up a lot of system resources. Each VM runs not just a full copy of an operating system, but a virtual copy of all the hardware that the operating system needs to run. This quickly adds up to a lot of RAM and CPU cycles. That\rquote s still economical compared to running separate actual computers, but for some applications it can be overkill, which led to the development of containers.\par
Here the problem came then \b container cames into running.\par
\tab\b0 Note : Due to this we can said, VM (hpervisor) is out of market. Each of this can have advandage and disadvandage.\par
\b Benefits of VMs\b0\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 All OS resources available to apps\par
{\pntext\f2\'B7\tab}Established management tools\par
{\pntext\f2\'B7\tab}Established security tools\par
{\pntext\f2\'B7\tab}Better known security controls\par

\pard\sa200\sl276\slmult1\b Popular VM Providers\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\b0 VMware vSphere\par
{\pntext\f2\'B7\tab}VirtualBox\par
{\pntext\f2\'B7\tab}Xen\par
{\pntext\f2\'B7\tab}Hyper-V\par
{\pntext\f2\'B7\tab}KVM\par

\pard\sa200\sl276\slmult1\b\lang9 Now we can start our topic,\par
What are Containers?\b0\par
With containers, instead of virtualizing the underlying computer like a virtual machine (VM), just the OS is virtualized.\par
\par
Containers sit on top of a physical server and its host OS \f1\emdash  typically Linux or Windows. Each container shares the host OS kernel and, usually, the binaries and libraries, too. Shared components are read-only. Sharing OS resources such as libraries significantly reduces the need to reproduce the operating system code, and means that a server can run multiple workloads with a single operating system installation. Containers are thus exceptionally light \emdash  they are only megabytes in size and take just seconds to start\f0\lang1033 .\par
\par
\b Types of Containers :\par
\lang9 1. Linux Containers (LXC)\par
\b0 LXC is a Linux operating system level virtualization method for running multiple isolated Linux systems on a single host\par
\b 2. Docker \b0\f1\par
Docker started as a project to build single-application LXC containers, introducing several changes to LXC that make containers more portable and flexible to use. It later morphed into its own container runtime environment. At a high level, Docker is a Linux utility that can efficiently create, ship, and run containers.\par
\par
\f0\lang1033 Difference Between VM's and Containers :\par
\b VM'S :\par
\b0\lang9 1. Heavy weight\par
2. Limited performance\par
3. Each VM runs in its own OS\par
4. Hardware-level virtualization\par
5. Startup time inminutes\par
6. Allocates required memory\par
7. Fully isolated , hence more secure\par
\par
\b Containers :\b0\par
1. Light weight\par
2. Native performance\par
3. All containers share the host OS.\par
4. OS virtualization\par
5. Startup time in milliseconds\par
6. Requires less memory space\par
7. Process level, so less secure\par
\par
Ok, Now we are ready to jump into the topic Docker world (containner based application). Lets Start................................\par
\par
\b Docker :\par
WHY? \par
Docker makes it really easy to install and run software without worrying about setup or dependencies.\par
What is Docker ?\par
\b0 Docker is a platform or ecosystem, around creating and running containners.\par
\b Docker terminology :\par
\b0 1. Docker Client (Basic inferface for user, to communicate with server)\par
2. Docker Server (Tool, that isresponsible for creating Images, running conainers, managing containners, etc..)\par
3. Docker Machine\par
4. Docker Image\par
5. Docker Hub\par
6.Docker Compose\par
\b\par
Concept Of Docker:\par
\b0 1. Image\par
\tab Single file with all the dependency and config required to run a program.\par
2. Containner: (We already learned lot):\par
\tab Quick Note - Container is a program with its own isolated set of hardware resources, and Make use of it's Host OS.\par
\b In docker, Containner is a instance of Image, Runs a program.\par
\b0\par
Install Docker on you system.\par
You can confirm, Docker is installed or not by running below command,\par
 >> docker version\par
}
 